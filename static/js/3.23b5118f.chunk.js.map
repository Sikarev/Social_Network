{"version":3,"sources":["assets/userImg.png","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","updateStatus","useEffect","className","s","statusBlock","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","handleSubmit","contacts","error","onSubmit","styles","createField","Input","type","keys","map","key","contact","ProfileData","profile","isOwner","enableEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","Preloader","src","photos","large","userPhoto","avatar","target","files","savePhoto","descriptionBlock","initialValues","formData","saveProfile","then","Post","classes","item","picture","alt","message","likesCount","maxLength10","maxLengthCreator","PostReduxForm","Field","component","Textarea","name","validate","requiredField","MyPosts","memo","postsElements","postsData","p","id","reverse","postBlock","addPost","newPostText","posts","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authoizedUserId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.23b5118f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userImg.cdbf4be5.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    let ConnectRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Zkzm\",\"avatar\":\"ProfileInfo_avatar__3-mU6\",\"statusBlock\":\"ProfileInfo_statusBlock__1faxC\",\"contact\":\"ProfileInfo_contact__1L_LW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__Ari7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3il6d\",\"likesCount\":\"Post_likesCount__2VW2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__19Afz\",\"postBlock\":\"MyPosts_postBlock__2kdVe\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let [status, updateStatus] = useState(props.status);\r\n    let onStatusChange = (e) => {\r\n        updateStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            <b>Status: </b>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"double click to set status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} autoFocus={true} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport { createField, Input } from '../../commons/FromControls/FormControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css'\r\nimport styles from '../../commons/FromControls/FormControls.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, contacts, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button>Save</button>\r\n            <div>\r\n                {error && <div className={styles.error}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <b>Full name: </b> {createField(Input, \"fullName\", \"Full name\", [], {})}\r\n            </div>\r\n            <div>\r\n                <b>About me: </b>\r\n                <div>\r\n                    {createField(\"textarea\", \"aboutMe\", \"About me\", [], {})}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {createField(\"input\", \"lookingForAJob\", \"\", [], { type: \"checkbox\" })}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills: </b>\r\n                <div>\r\n                    {createField(\"textarea\", \"lookingForAJobDescription\", \"What can I do\", [], {})}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b> {\r\n                    Object.keys(contacts).map(key => {\r\n                        return (\r\n                            <div key={key} className={s.contact}>\r\n                                <b>{key}</b> {createField(Input, \"contacts.\" + key, key, [], {})}\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'profileData' })(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React from 'react';\r\nimport Preloader from '../../commons/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/userImg.png\"\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.avatar} />\r\n            </div>\r\n            {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n                {editMode ? <ProfileDataReduxForm initialValues={props.profile} onSubmit={onSubmit} contacts={props.profile.contacts} /> : <ProfileData profile={props.profile} isOwner={props.isOwner} enableEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, enableEditMode }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={enableEditMode}>Edit</button></div>}\r\n            <div>\r\n                <b>Full name: </b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>About me: </b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {\r\n                profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>Contacts: </b> {\r\n                    Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle}: </b> {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    // console.log(props.message);\r\n    return <div className={classes.item}>\r\n        <img src={props.picture} alt=\"Avatar\" />\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n        <span className={classes.likesCount}>likes: {props.likesCount}</span>\r\n    </div>\r\n}\r\n//src=\"http://sun9-36.userapi.com/s/v1/if1/_BF97CTzOHd98gIKmCzOgpm9y4LWSU9J5k2_OGI1T7sUdEyfFeoGWGWJgpW3N8TBL8V50Q.jpg?size=200x0&quality=96&crop=0,0,200,290&ava=1\"\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../../utilities/validators/validator';\r\nimport { Textarea } from '../../commons/FromControls/FormControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[requiredField, maxLength10]} />\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ form: 'addPost' })(PostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} picture={p.picture} />).reverse();\r\n\r\n    const addPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={addPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/reducer/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {\r\n        addPost\r\n    })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    // debugger;\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n                isOwner={props.isOwner} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/reducer/profileReducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authoizedUserId;\r\n            if (!userId) {\r\n                userId = this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                isOwner={!this.props.match.params.userId}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authoizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps,\r\n        {\r\n            getProfile,\r\n            getStatus,\r\n            updateStatus,\r\n            savePhoto,\r\n            saveProfile\r\n        })\r\n)(ProfileContainer)\r\n\r\n// export default connect(mapStateToProps, { getProfile })(withUrlAuthRedirectComponent);"],"sourceRoot":""}